{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterPipe {\n  transform(value, filterString, propName) {\n    if (value.length === 0 || filterString === '') {\n      return value;\n    }\n    const resultArray = [];\n    for (const item of value) {\n      if (item[propName] === filterString) {\n        resultArray.push(item);\n      }\n    }\n    return resultArray;\n  }\n  static #_ = this.ɵfac = function FilterPipe_Factory(t) {\n    return new (t || FilterPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"filter\",\n    type: FilterPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["FilterPipe","transform","value","filterString","propName","length","resultArray","item","push","_","_2","pure"],"sources":["/home/kumar007ambi/ahento/src/app/filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter',\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(value: any, filterString: string, propName: string) {\r\n    if (value.length === 0 || filterString === '') {\r\n      return value;\r\n    }\r\n    const resultArray = [];\r\n    for (const item of value) {\r\n      if (item[propName] === filterString) {\r\n        resultArray.push(item);\r\n      }\r\n    }\r\n    return resultArray;\r\n  }\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,UAAU;EACrBC,SAASA,CAACC,KAAU,EAAEC,YAAoB,EAAEC,QAAgB;IAC1D,IAAIF,KAAK,CAACG,MAAM,KAAK,CAAC,IAAIF,YAAY,KAAK,EAAE,EAAE;MAC7C,OAAOD,KAAK;;IAEd,MAAMI,WAAW,GAAG,EAAE;IACtB,KAAK,MAAMC,IAAI,IAAIL,KAAK,EAAE;MACxB,IAAIK,IAAI,CAACH,QAAQ,CAAC,KAAKD,YAAY,EAAE;QACnCG,WAAW,CAACE,IAAI,CAACD,IAAI,CAAC;;;IAG1B,OAAOD,WAAW;EACpB;EAAC,QAAAG,CAAA,G;qBAZUT,UAAU;EAAA;EAAA,QAAAU,EAAA,G;;UAAVV,UAAU;IAAAW,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}