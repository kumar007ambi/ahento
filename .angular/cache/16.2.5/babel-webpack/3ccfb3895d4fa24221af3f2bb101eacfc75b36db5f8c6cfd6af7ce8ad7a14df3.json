{"ast":null,"code":"import { HttpEventType } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nexport class LoggingInterceptorService {\n  intercept(req, next) {\n    console.log('Outgoing responce');\n    return next.handle(req).pipe(tap(event => {\n      if (event.type === HttpEventType.Response) {\n        console.log('Incoming responce');\n        console.log(event.body);\n      }\n    }));\n  }\n}","map":{"version":3,"names":["HttpEventType","tap","LoggingInterceptorService","intercept","req","next","console","log","handle","pipe","event","type","Response","body"],"sources":["/home/kumar007ambi/ahento/src/app/httpRequest/logging-interceptor.service.ts"],"sourcesContent":["import {\r\n  HttpEventType,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport class LoggingInterceptorService implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    console.log('Outgoing responce');\r\n    return next.handle(req).pipe(\r\n      tap((event) => {\r\n        if (event.type === HttpEventType.Response) {\r\n          console.log('Incoming responce');\r\n          console.log(event.body);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,aAAa,QAIR,sBAAsB;AAC7B,SAASC,GAAG,QAAQ,gBAAgB;AAEpC,OAAM,MAAOC,yBAAyB;EACpCC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,OAAOF,IAAI,CAACG,MAAM,CAACJ,GAAG,CAAC,CAACK,IAAI,CAC1BR,GAAG,CAAES,KAAK,IAAI;MACZ,IAAIA,KAAK,CAACC,IAAI,KAAKX,aAAa,CAACY,QAAQ,EAAE;QACzCN,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChCD,OAAO,CAACC,GAAG,CAACG,KAAK,CAACG,IAAI,CAAC;;IAE3B,CAAC,CAAC,CACH;EACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}