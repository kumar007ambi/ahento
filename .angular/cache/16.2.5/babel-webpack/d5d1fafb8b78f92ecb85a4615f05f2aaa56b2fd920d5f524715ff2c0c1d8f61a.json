{"ast":null,"code":"import { HttpEventType, HttpHeaders } from '@angular/common/http';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { Subject, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PostService {\n  constructor(http) {\n    this.http = http;\n    this.error = new Subject();\n  }\n  createAndStorePosts(title, content) {\n    // Send Http request\n    const postData = {\n      title: title,\n      content: content\n    };\n    this.http.post('https://ng-complete-guide-ebb66-default-rtdb.firebaseio.com/posts.json', postData, {\n      observe: 'body'\n    }).subscribe(responceData => {\n      console.log(responceData);\n    }, error => {\n      this.error.next(error.message);\n    });\n  }\n  fetchPosts() {\n    return this.http.get('https://ng-complete-guide-ebb66-default-rtdb.firebaseio.com/posts.json', {\n      headers: new HttpHeaders({\n        'Custom-header': 'Hello'\n      })\n    }).pipe(map(responceData => {\n      const postArray = [];\n      for (const key in responceData) {\n        if (responceData.hasOwnProperty(key)) {\n          postArray.push({\n            ...responceData[key],\n            id: key\n          });\n        }\n      }\n      return postArray;\n    }), catchError(errorRes => {\n      return throwError(errorRes);\n    }));\n  }\n  deletePosts() {\n    return this.http.delete('https://ng-complete-guide-ebb66-default-rtdb.firebaseio.com/posts.json', {\n      observe: 'events'\n    }).pipe(tap(event => {\n      console.log(event);\n      if (event.type === HttpEventType.Sent) {}\n      if (event.type === HttpEventType.Response) {\n        console.log(event.body);\n      }\n    }));\n  }\n  static #_ = this.ɵfac = function PostService_Factory(t) {\n    return new (t || PostService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostService,\n    factory: PostService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpEventType","HttpHeaders","map","catchError","tap","Subject","throwError","PostService","constructor","http","error","createAndStorePosts","title","content","postData","post","observe","subscribe","responceData","console","log","next","message","fetchPosts","get","headers","pipe","postArray","key","hasOwnProperty","push","id","errorRes","deletePosts","delete","event","type","Sent","Response","body","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/kumar007ambi/ahento/src/app/httpRequest/posts.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpEventType, HttpHeaders } from '@angular/common/http';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { Subject, throwError } from 'rxjs';\r\nimport { Post } from '../httpRequest/posts.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PostService {\r\n  error = new Subject<string>();\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createAndStorePosts(title: string, content: string) {\r\n    // Send Http request\r\n    const postData: Post = { title: title, content: content };\r\n    this.http\r\n      .post<{ name: string }>(\r\n        'https://ng-complete-guide-ebb66-default-rtdb.firebaseio.com/posts.json',\r\n        postData,\r\n        {\r\n          observe: 'body',\r\n        }\r\n      )\r\n      .subscribe(\r\n        (responceData) => {\r\n          console.log(responceData);\r\n        },\r\n        (error) => {\r\n          this.error.next(error.message);\r\n        }\r\n      );\r\n  }\r\n  fetchPosts() {\r\n    return this.http\r\n      .get<{ [key: string]: Post }>(\r\n        'https://ng-complete-guide-ebb66-default-rtdb.firebaseio.com/posts.json',\r\n        {\r\n          headers: new HttpHeaders({ 'Custom-header': 'Hello' }),\r\n        }\r\n      )\r\n      .pipe(\r\n        map((responceData) => {\r\n          const postArray: Post[] = [];\r\n          for (const key in responceData) {\r\n            if (responceData.hasOwnProperty(key)) {\r\n              postArray.push({ ...responceData[key], id: key });\r\n            }\r\n          }\r\n          return postArray;\r\n        }),\r\n        catchError((errorRes) => {\r\n          return throwError(errorRes);\r\n        })\r\n      );\r\n  }\r\n  deletePosts() {\r\n    return this.http\r\n      .delete(\r\n        'https://ng-complete-guide-ebb66-default-rtdb.firebaseio.com/posts.json',\r\n        {\r\n          observe: 'events',\r\n        }\r\n      )\r\n      .pipe(\r\n        tap((event) => {\r\n          console.log(event);\r\n          if(event.type===HttpEventType.Sent){\r\n            \r\n          }\r\n          if (event.type === HttpEventType.Response) {\r\n            console.log(event.body)\r\n          }\r\n        })\r\n      );\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;AAC7E,SAASC,GAAG,EAAEC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AACrD,SAASC,OAAO,EAAEC,UAAU,QAAQ,MAAM;;;AAM1C,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,KAAK,GAAG,IAAIL,OAAO,EAAU;EACU;EAEvCM,mBAAmBA,CAACC,KAAa,EAAEC,OAAe;IAChD;IACA,MAAMC,QAAQ,GAAS;MAAEF,KAAK,EAAEA,KAAK;MAAEC,OAAO,EAAEA;IAAO,CAAE;IACzD,IAAI,CAACJ,IAAI,CACNM,IAAI,CACH,wEAAwE,EACxED,QAAQ,EACR;MACEE,OAAO,EAAE;KACV,CACF,CACAC,SAAS,CACPC,YAAY,IAAI;MACfC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IAC3B,CAAC,EACAR,KAAK,IAAI;MACR,IAAI,CAACA,KAAK,CAACW,IAAI,CAACX,KAAK,CAACY,OAAO,CAAC;IAChC,CAAC,CACF;EACL;EACAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACd,IAAI,CACbe,GAAG,CACF,wEAAwE,EACxE;MACEC,OAAO,EAAE,IAAIxB,WAAW,CAAC;QAAE,eAAe,EAAE;MAAO,CAAE;KACtD,CACF,CACAyB,IAAI,CACHxB,GAAG,CAAEgB,YAAY,IAAI;MACnB,MAAMS,SAAS,GAAW,EAAE;MAC5B,KAAK,MAAMC,GAAG,IAAIV,YAAY,EAAE;QAC9B,IAAIA,YAAY,CAACW,cAAc,CAACD,GAAG,CAAC,EAAE;UACpCD,SAAS,CAACG,IAAI,CAAC;YAAE,GAAGZ,YAAY,CAACU,GAAG,CAAC;YAAEG,EAAE,EAAEH;UAAG,CAAE,CAAC;;;MAGrD,OAAOD,SAAS;IAClB,CAAC,CAAC,EACFxB,UAAU,CAAE6B,QAAQ,IAAI;MACtB,OAAO1B,UAAU,CAAC0B,QAAQ,CAAC;IAC7B,CAAC,CAAC,CACH;EACL;EACAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACxB,IAAI,CACbyB,MAAM,CACL,wEAAwE,EACxE;MACElB,OAAO,EAAE;KACV,CACF,CACAU,IAAI,CACHtB,GAAG,CAAE+B,KAAK,IAAI;MACZhB,OAAO,CAACC,GAAG,CAACe,KAAK,CAAC;MAClB,IAAGA,KAAK,CAACC,IAAI,KAAGpC,aAAa,CAACqC,IAAI,EAAC,C;MAGnC,IAAIF,KAAK,CAACC,IAAI,KAAKpC,aAAa,CAACsC,QAAQ,EAAE;QACzCnB,OAAO,CAACC,GAAG,CAACe,KAAK,CAACI,IAAI,CAAC;;IAE3B,CAAC,CAAC,CACH;EACL;EAAC,QAAAC,CAAA,G;qBAlEUjC,WAAW,EAAAkC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXtC,WAAW;IAAAuC,OAAA,EAAXvC,WAAW,CAAAwC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}